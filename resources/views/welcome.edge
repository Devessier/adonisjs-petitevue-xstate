@layout('layouts/main')

@section('body')
  <div class="px-4 py-8 sm:px-0">
    <div v-scope class="grid grid-cols-4 gap-2 p-10 border-4 border-gray-200 border-dashed rounded-lg">
      <div class="flex flex-col justify-center">
        <div class="grid grid-cols-1 gap-2">
          <p>
            Score: <span v-cloak>@{{game.state.context.winsCount}}</span>
          </p>
          
          @each(label in ['Move up', 'Move down', 'Move left', 'Move right'])
            <button
              class="inline-flex items-center px-2.5 py-1.5 border border-gray-300 shadow-sm text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
              @click="game.send({ type: '{{label}}' })"
            >
              {{label}}
            </button>
          @end
        </div>
      </div>

      <div class="grid w-full max-w-xl grid-cols-10 col-span-3 mx-auto grid-rows-10">
        @each((_, row) in Array.from({ length: 10 }))
          @each((_, column) in Array.from({ length: 10 }))
            <div
              class="border border-gray-100 aspect-square"
              :class="{
                'bg-green-100': game.state.context.y === {{row}} && game.state.context.x === {{column}},
                'bg-red-100': game.state.context.goal.y === {{row}} && game.state.context.goal.x === {{column}},
              }"
            ></div>
          @end
        @end
      </div>

      {{--  Thanks to `v-cloak` the modal is hidden by default, even before Petite Vue takes `v-show` into account.  --}}
      <div v-cloak v-show="game.state.matches('Won game')" class="fixed inset-0 z-10 overflow-y-auto" aria-labelledby="modal-title" role="dialog" aria-modal="true">
        <div class="flex items-end justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0">
          <div class="fixed inset-0 transition-opacity bg-gray-500 bg-opacity-75" aria-hidden="true"></div>
      
          <!-- This element is to trick the browser into centering the modal contents. -->
          <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>
      
          <div class="relative inline-block px-4 pt-5 pb-4 overflow-hidden text-left align-bottom transition-all transform bg-white rounded-lg shadow-xl sm:my-8 sm:align-middle sm:max-w-sm sm:w-full sm:p-6">
            <div>
              <div class="flex items-center justify-center w-12 h-12 mx-auto bg-green-100 rounded-full">
                <!-- Heroicon name: outline/check -->
                <svg class="w-6 h-6 text-green-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                </svg>
              </div>
              <div class="mt-3 text-center sm:mt-5">
                <h3 class="text-lg font-medium leading-6 text-gray-900" id="modal-title">You won the game!</h3>
                <div class="mt-2">
                  <p class="text-sm text-gray-500">Do you want to start another game?</p>
                </div>
              </div>
            </div>
            <div class="mt-5 sm:mt-6">
              <button
                type="button"
                class="inline-flex justify-center w-full px-4 py-2 text-base font-medium text-white bg-indigo-600 border border-transparent rounded-md shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:text-sm"
                @click="game.send({ type: 'Start a new game' })"
              >
                Start a new game
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
@end
